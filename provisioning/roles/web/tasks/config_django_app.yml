###
# Pulls the code from a remote Git repository, configures the web application,
# creates a virtualenv, and collects static assets
#
---

- name: checkout latest web app code
  git: repo={{django_repo}} dest={{app_code_dir}}
  # when: not vagrant
  tags: django

# - name: copy src from local machine to vagrant
#   copy: src={{local_src}}
#     dest={{app_base_dir}}
#     owner={{app_user}}
#     group={{app_group}}
#   when: vagrant
#   tags: django

- name: check if virtualenv already exists
  stat: path={{app_env_dir}}
  register: venv_dir
  tags: django

- name: Ensure that all paths are created and have the right permissions
  file: path={{global_env_dir}}
    recurse=yes
    owner={{ app_user }}
    group={{ app_group }}
    state=directory

- name: create virtualenv for django web application
  shell: virtualenv {{app_env_dir}}
  when: venv_dir.stat.isdir is not defined
  sudo: yes
  sudo_user: "{{app_name}}"
  tags: django

- name: install web application dependencies listed in requirements.txt
  pip: requirements={{requirements_txt_path}}
    virtualenv={{app_env_dir}}
  sudo: yes
  sudo_user: "{{app_name}}"
  tags: django

- name: run the django syncdb command
  django_manage: app_path={{app_code_dir}}
    command="syncdb"
    virtualenv={{app_env_dir}}
    settings={{django_settings}}
  environment: app_env_vars
  sudo: yes
  sudo_user: "{{app_name}}"
  tags: django

- name: run the django collectstatic command
  django_manage: app_path={{app_code_dir}}
    command="collectstatic"
    virtualenv={{app_env_dir}}
    settings={{django_settings}}
  environment: app_env_vars
  sudo: yes
  sudo_user: "{{app_name}}"
  tags: django

- name: run the django migrate command
  django_manage: app_path={{app_code_dir}}
    command="migrate"
    virtualenv={{app_env_dir}}
    settings={{django_settings}}
  environment: app_env_vars
  sudo: yes
  sudo_user: "{{app_name}}"
  tags: django
